<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>navicat on Baopeng&#39;s Blog</title>
    <link>https://bp0604.github.io/tags/navicat/</link>
    <description>Recent content in navicat on Baopeng&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>©2021 - 2022 Baopeng</copyright>
    <lastBuildDate>Thu, 17 Nov 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://bp0604.github.io/tags/navicat/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Navicat Premium小知识</title>
      <link>https://bp0604.github.io/post/navicat-premium-tips/</link>
      <pubDate>Thu, 17 Nov 2022 00:00:00 +0000</pubDate>
      
      <guid>https://bp0604.github.io/post/navicat-premium-tips/</guid>
      <description>突然发现有些功能还没有使用过，在这里记录一下。</description>
      <content:encoded><![CDATA[<h2 id="数据生成">数据生成</h2>
<p>在Table上右击Date generation，可生成数据。
记得以前版本好像没这功能。</p>
<p>也可以使用 存储过程，来生成。
novel这个开源项目中，有分表的脚本 。</p>
<h3 id="造数据跑批任务-xxl-job">造数据，跑批任务 xxl-job</h3>
<p>我在数据库中插入了大概两百万条数据，把造数据的过程也分享给你们
<a href="https://juejin.cn/post/7095586469145739300">https://juejin.cn/post/7095586469145739300</a></p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-sql" data-lang="sql"><span style="display:flex;"><span><span style="color:#f92672">//</span> <span style="color:#ae81ff">1</span><span style="color:#960050;background-color:#1e0010">、创建表</span>
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">CREATE</span> <span style="color:#66d9ef">TABLE</span> <span style="color:#f92672">`</span>t_repay_plan<span style="color:#f92672">`</span> (
</span></span><span style="display:flex;"><span>  <span style="color:#f92672">`</span>id<span style="color:#f92672">`</span> int(<span style="color:#ae81ff">11</span>) <span style="color:#66d9ef">NOT</span> <span style="color:#66d9ef">NULL</span> AUTO_INCREMENT,
</span></span><span style="display:flex;"><span>  <span style="color:#f92672">`</span>repay_time<span style="color:#f92672">`</span> datetime <span style="color:#66d9ef">DEFAULT</span> <span style="color:#66d9ef">NULL</span> <span style="color:#66d9ef">COMMENT</span> <span style="color:#e6db74">&#39;还款时间&#39;</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#f92672">`</span>str1<span style="color:#f92672">`</span> int(<span style="color:#ae81ff">11</span>) <span style="color:#66d9ef">DEFAULT</span> <span style="color:#66d9ef">NULL</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#66d9ef">PRIMARY</span> <span style="color:#66d9ef">KEY</span> (<span style="color:#f92672">`</span>id<span style="color:#f92672">`</span>)
</span></span><span style="display:flex;"><span>) ENGINE<span style="color:#f92672">=</span>InnoDB AUTO_INCREMENT<span style="color:#f92672">=</span><span style="color:#ae81ff">3099998</span> <span style="color:#66d9ef">DEFAULT</span> CHARSET<span style="color:#f92672">=</span>utf8mb4
</span></span><span style="display:flex;"><span>  
</span></span><span style="display:flex;"><span><span style="color:#f92672">//</span> <span style="color:#ae81ff">2</span><span style="color:#960050;background-color:#1e0010">、创建存储过程</span> 
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">delimiter</span> <span style="color:#960050;background-color:#1e0010">$$</span>
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">create</span> <span style="color:#66d9ef">procedure</span> insert_repayPlan()
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">begin</span>
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">declare</span> n int <span style="color:#66d9ef">default</span> <span style="color:#ae81ff">1</span>;
</span></span><span style="display:flex;"><span>while n<span style="color:#f92672">&lt;</span> <span style="color:#ae81ff">3000000</span>
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">do</span> 
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">insert</span> <span style="color:#66d9ef">into</span> t_repay_plan(repay_time,str1) <span style="color:#66d9ef">values</span>(concat( CONCAT(FLOOR(<span style="color:#ae81ff">2015</span> <span style="color:#f92672">+</span> (RAND() <span style="color:#f92672">*</span> <span style="color:#ae81ff">1</span>)),<span style="color:#e6db74">&#39;-&#39;</span>,LPAD(FLOOR(<span style="color:#ae81ff">10</span> <span style="color:#f92672">+</span> (RAND() <span style="color:#f92672">*</span> <span style="color:#ae81ff">2</span>)),<span style="color:#ae81ff">2</span>,<span style="color:#ae81ff">0</span>),<span style="color:#e6db74">&#39;-&#39;</span>,LPAD(FLOOR(<span style="color:#ae81ff">1</span> <span style="color:#f92672">+</span> (RAND() <span style="color:#f92672">*</span> <span style="color:#ae81ff">25</span>)),<span style="color:#ae81ff">2</span>,<span style="color:#ae81ff">0</span>))),n);
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">set</span> n <span style="color:#f92672">=</span> n<span style="color:#f92672">+</span><span style="color:#ae81ff">1</span>;
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">end</span> while;
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">end</span>
</span></span><span style="display:flex;"><span>  
</span></span><span style="display:flex;"><span>  <span style="color:#f92672">//</span> <span style="color:#ae81ff">3</span><span style="color:#960050;background-color:#1e0010">、执行存储过程</span>
</span></span><span style="display:flex;"><span>  <span style="color:#66d9ef">call</span> insert_repayPlan();
</span></span></code></pre></div><h2 id="chart图表功能咨询公司杀手锏">Chart图表功能（咨询公司杀手锏）</h2>
<p>不知是否能代替外部的 metabase，Tableau，fineBI ，finereport之类的可视化工具应用。</p>
<pre><code>先看下自带的示范，自带了两个 Data Source。
分别是：CustomerCount(单表) 和 Order（多表联结）
</code></pre>
<p><strong>图表支持 Presentation演示。<br>
还可以设置月份等条件。</strong></p>
<h3 id="customercount单表">CustomerCount(单表)</h3>
<p>字段：<br>
date  online  retail  shopping_mall  total</p>
<p>图表有5个：<br>
Customer Online 数字<br>
Customer Total Visit 数字<br>
Customer Visit in Each Month 每月数据面积图<br>
Customer 2022 Visit<br>
Customer 2021 Visit</p>
<p>Chart Types 中的 面积图直观。</p>
<h3 id="order多表联结--来源就是一张xlsx的excel数据-15mb">Order（多表联结）- 来源就是一张xlsx的excel数据 15MB</h3>
<pre tabindex="0"><code>Customer - Order - OrderProduct - Product
                                - order_product_extra_info
</code></pre><p>此处在联表时， order_id 可以有多条内容。（一个order_id 对应多个 OrderProduct）</p>
<p>order_product_extra_info存放的是：<br>
op_id<br>
order_id<br>
order_product_total_retail_price<br>
order_product_total_wholesale_price<br>
order_product_total_profit</p>
<p>分组后，使用面积图。<br>
还有每日热力图。</p>
<h3 id="next---python展示">Next - Python展示</h3>
<p>使用Python读取excel或csv数据后，展示出来。</p>
<h2 id="数据同步">数据同步</h2>
<h2 id="数据建模">数据建模</h2>
<h2 id="表triggers">表Triggers</h2>
<p><a href="https://www.cnblogs.com/geaozhang/p/6819648.html">https://www.cnblogs.com/geaozhang/p/6819648.html</a></p>
]]></content:encoded>
    </item>
    
  </channel>
</rss>
